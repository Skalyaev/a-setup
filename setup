#!/bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin

UI_GROUP=(
    terminal
    ide
    gui
    browser
    tools
)
PENTEST_GROUP=(
    info
    info_gathering
    vuln
    vuln_analysis
    web
    web_analysis
    db
    db_assessment
    passw
    passw_atk
    exploit
    exploitation
    prives
    sniff
    sniffing
    spoof
    spoofing
    wire
    wireless_atk
    rev
    reverse
    report
)

CONFIG_FILE=~/.config/setup/config
EXCLUDED=()
SILENT=0
DO_APT=1
DO_GIT=1
DO_CURL=1

#================================== COLORS
GREEN='\033[0;32m'
RED='\033[0;31m'
GRAY='\033[0;37m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'

#================================== USAGE
USAGE="
${GRAY}===================${NC}usage\n
${YELLOW}setup ${GREEN}COMMAND GROUP ${BLUE}[targets] [options]${NC}\n
\n
COMMAND:\n
\t  ${GREEN}install ${GRAY}| ${GREEN}update ${GRAY}| ${GREEN}remove${NC}\n
GROUP:\n
\t  ${GREEN}all ${GRAY}| ${GREEN}ui ${GRAY}| ${GREEN}pentest${NC}\n
\n
${GRAY}===================${NC}targets\n
${GREEN}ui${NC} group:\n
\t  ${BLUE}terminal${NC}\n
\t  ${BLUE}ide${NC}\n
\t  ${BLUE}gui${NC}\n
\t  ${BLUE}browser${NC}\n
\t  ${BLUE}tools${NC}\n
\n
${GREEN}pentest${NC} group:\n
\t  ${BLUE}info${GRAY}[_gathering]${NC}\n
\t  ${BLUE}vuln${GRAY}[_analysis]${NC}\n
\t  ${BLUE}web${GRAY}[_analysis]${NC}\n
\t  ${BLUE}db${GRAY}[_assessment]${NC}\n
\t  ${BLUE}pass${GRAY}[w_atk]${NC}\n
\t  ${BLUE}exploit${GRAY}[ation]${NC}\n
\t  ${BLUE}privesc${NC}\n
\t  ${BLUE}sniff${GRAY}[ing]${NC}\n
\t  ${BLUE}spoof${GRAY}[ing]${NC}\n 
\t  ${BLUE}wire${GRAY}[less_atk]${NC}\n
\t  ${BLUE}rev${GRAY}[erse]${NC}\n
\t  ${BLUE}report${NC}\n
\n
${GRAY}===================${NC}options\n
\t  ${BLUE}-c, --config PATH${NC}\n
\t\t    Use a specific config file.\n
\t  ${BLUE}-e, --exclude TARGETS${NC}\n
\t\t    Exclude specific ${BLUE}targets${NC}.\n
\t  ${BLUE}-s, --silent${NC}\n
\t\t    Run in silent mode.\n
\t  ${BLUE}-n, --ninja${NC}\n
\t\t    Do not install any external resources.\n
\t  ${BLUE}--no-apt${NC}\n
\t\t    Do not install apt packages.\n
\t  ${BLUE}--no-git${NC}\n
\t\t    Do not install git repositories.\n
\t  ${BLUE}--no-curl${NC}\n
\t\t    Do not install other external resources.\n
\n
${GRAY}===================${NC}exemples\n
${YELLOW}setup ${GREEN}install all ${BLUE}terminal privesc report -c ~/exemple -s${NC}\n
${YELLOW}setup ${GREEN}install pentest ${BLUE}-e rev wire${NC}\n
${YELLOW}setup ${GREEN}install ui ${BLUE}terminal tools -n${NC}\n
${YELLOW}setup ${GREEN}update all ${BLUE}--no-apt${NC}\n
"

#================================== PARSING - ARGUMENTS
if [ $# -lt 2 ]; then
    echo -e $USAGE
    exit 1
fi

COMMAND="$1"
if [ "$COMMAND" != install \
    -a "$COMMAND" != update \
    -a "$COMMAND" != remove ]; then
    echo -e "[$RED ERROR $NC] Unknown command:$GREEN $1${NC}"
    exit 1
fi

GROUP="$2"
if [ "$GROUP" != all \
    -a "$GROUP" != ui \
    -a "$GROUP" != pentest ]; then
    echo -e "[$RED ERROR $NC] Unknown group:$GREEN $2${NC}"
    exit 1
fi

shift 2
TARGETS=()

is_inside() {
    local tab=("${@:1:$#-1}")
    local item="${@: -1}"
    for x in "${tab[@]}"; do
        if [ "$x" = "$item" ]; then
            return 0
        fi
    done
    return 1
}

find_it() {
    local found=1
    if [ $GROUP = all -o $GROUP = ui ]; then
        is_inside ${UI_GROUP[@]} "$1"
        found=$?
    fi
    if [ $found -eq 1 ] && [ $GROUP = all -o $GROUP = pentest ]; then
        is_inside ${PENTEST_GROUP[@]} "$1"
        found=$?
    fi
    return $found
}

while [ $# -gt 0 ]; do
    if [ "${1:0:1}" = - ]; then
        break
    fi
    if ! find_it "$1"; then
        echo -e "[$RED ERROR $NC] ${BLUE}$1${NC} not found in group ${GREEN}$GROUP${NC}."
        exit 1
    fi
    TARGETS+=("$1")
    shift
done

while [ $# -gt 0 ]; do
    case "$1" in
    -c | --config)
        if [ $# -lt 2 ]; then
            echo -e [$RED ERROR $NC] Missing argument for ${BLUE}--config${NC}.
            exit 1
        fi
        CONFIG_FILE="$2"
        shift 2
        ;;
    -e | --exclude)
        shift
        while [ $# -gt 0 ]; do
            if [ "${1:0:1}" = - ]; then
                break
            fi
            if ! find_it "$1"; then
                echo -e "[$RED ERROR $NC] ${BLUE}$1${NC} not found in group ${GREEN}$GROUP${NC}."
                exit 1
            fi
            EXCLUDED+=("$1")
            shift
        done
        if [ ${#EXCLUDED[@]} -eq 0 ]; then
            echo -e [$RED ERROR $NC] Missing argument for ${BLUE}--exclude${NC}.
            exit 1
        fi
        ;;
    -s | --silent)
        SILENT=1
        shift
        ;;
    -n | --ninja)
        DO_APT=0
        DO_GIT=0
        DO_CURL=0
        shift
        ;;
    --no-apt)
        DO_APT=0
        shift
        ;;
    --no-git)
        DO_GIT=0
        shift
        ;;
    --no-curl)
        DO_CURL=0
        shift
        ;;
    *)
        echo -e "[$RED ERROR $NC] Unknown option:$BLUE $1${NC}"
        exit 1
        ;;
    esac
done

#================================== PARSING - CONFIG
CONFIG_FILE=$CONFIG_FILE

#================================== START
echo cmd: $COMMAND
echo group: $GROUP
echo targets: ${TARGETS[@]}
echo config: $CONFIG_FILE
echo excluded: ${EXCLUDED[@]}
echo silent: $SILENT
echo apt: $DO_APT
echo git: $DO_GIT
echo curl: $DO_CURL


