#!/bin/bash
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"
GRAY="\033[0;37m"
NC="\033[0m"

USAGE="$GRAY===================USAGE
$YELLOW$(basename "$0") $BLUE<root> $GREEN[options]$NC

From $BLUE<root>$NC, count bytes per file extension

$GREEN[options]$NC:
-e, --exclude <name1> [name2]...
    $RED*$NC Exclude files/directories from the count
-o, --output <file>
    $RED*$NC Append result to <file>
-sio, --shield-io
    $RED*$NC Append result as shield.io badges
-h, --help
    $RED*$NC Print this message
"
if [[ "$#" -lt 1 ]];then
    echo -e "$USAGE"
    exit 1
fi
ROOT="$1"
EXCLUDE=".git"
EXT=(
    # <ext> <color> <label> <icon from https://simpleicons.org/>
    "cpp;hpp f34b7d c%2B%2B cplusplus"
    "c;h 555555 c c"
    "sh 89e051 sh powershell"
    "py 3572a5 py python"
    "tsx 3178c6 ts typescript"
    "js f1e05a js javascript"
    "css 563d7c css css3"
    "html e34c26 html html5"
)
shift 1
usage() {
    echo -e "$USAGE"
    exit "$1"
}
while [[ "$#" -gt 0 ]];do
    case "$1" in
    "-e" | "--exclude")
        shift
        [[ "$#" -lt 1 ]] && usage 1
        while [[ "$#" -gt 0 ]];do
            [[ "${1:0:1}" == "-" ]] && break
            EXCLUDE+=" $1"
            shift
        done
        ;;
    "-o" | "--output")
        shift
        [[ "$#" -lt 1 ]] && usage 1
        OUTPUT="$1"
        shift
        ;;
    "-sio" | "--shield-io") DO_SIO=1; shift;;
    "-h" | "--help") usage 0;;
    *) usage 1;;
    esac
done

for x in "${EXT[@]}";do
    total=0
    x="$(cut -d" " -f1 <<< "$x")"
    while read ext;do

        cmd="find $ROOT"
        while read line;do
            cmd+=" ! -path \"*/$line*\""
        done< <(tr " " "\n" <<< "$EXCLUDE")

        cmd+=" -name \"*.$ext\" | xargs wc -c\
            | tail -n1 | cut -d' ' -f1"
        count="$(eval "$cmd")"
        total="$((total+count))"

    done< <(tr ";" "\n" <<< "$x")
    BYTES+=("$total")
done
TOTAL="$(IFS=+; echo "$((${BYTES[*]}))")"

payload() {
    local ext="$1"
    local size="$2"
    size="$(sed ':a;s/\B[0-9]\{3\}\>/.&/;ta' <<< "$size")"
    local percent="$3"
    [[ "${percent:0:1}" == "." ]] && percent="0$percent"
    local name="$(cut -d" " -f1 <<< "$ext" | cut -d";" -f1)"
    if [[ "$DO_SIO" ]];then
        local color="$(cut -d" " -f2 <<< "$ext")"
        local label="$(cut -d" " -f3 <<< "$ext")"
        local icon="$(cut -d" " -f4 <<< "$ext")"
        local p1="![$name](https://img.shields.io/badge/"
        local p2="--$percent%25--%20$size%20bytes-%23$color?"
        local p3="style=for-the-badge&logo=$icon&logoColor=white"
        local p4="&label=$label&labelColor=424242)"
        echo -e "$p1$p2$p3$p4"
    else
        echo -e "$name: $size bytes ($percent%)"
    fi
}
for x in "${!EXT[@]}";do
    size="${BYTES[x]}"
    ext="${EXT[x]}"
    at="$x"
    for y in "${!EXT[@]}";do
        [[ "${BYTES[y]}" -lt "$size" ]] && continue
        size="${BYTES[y]}"
        ext="${EXT[y]}"
        at="$y"
    done
    percent="$(echo "scale=2; $size*100/$TOTAL" | bc)"
    PAYLOAD+="$(payload "$ext" "$size" "$percent")\n"
    BYTES[at]=-1
done
if [[ "$OUTPUT" ]];then
    echo -ne "$PAYLOAD" >> "$OUTPUT"
else
    echo -ne "$PAYLOAD"
fi
