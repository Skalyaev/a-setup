#!/bin/bash
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
GRAY='\033[0;37m'
NC='\033[0m'

USAGE="$GRAY===================USAGE
$YELLOW$(basename "$0") $BLUE<root> <output>$NC $GREEN[options]$NC

Count the amount of data from $BLUE<root>$NC using file extensions
Output it at end of a README.md file as shield.io badges

$BLUE<root>$NC:
    $RED*$NC The root directory to start counting from
$BLUE<output>$NC:
    $RED*$NC The README.md file to append the output to

$GREEN[options]$NC:
-e, --exclude \"<name1> <name2> ...\"
    $RED*$NC Exclude files/directories from the count
-h, --help
    $RED*$NC Print this message
"
if (( "$#" < 2 )); then
    echo -e "$USAGE"
    exit 1
fi
ROOT="$1"
OUTPUT="$2"
shift 2
EXCLUDE='.git'
while (( "$#" )); do
    case "$1" in
        -e|--exclude)
            shift
            if (( "$#" < 1 )); then
                echo -e "$USAGE"
                exit 1
            fi
            while (( "$#" >= 1 )); do
                if [[ "${1:0:1}" == '-' ]]; then
                    break
                fi
                EXCLUDE+=" $1"
                shift
            done
            ;;
        -h|--help)
            echo -e "$USAGE"
            exit 0
            ;;
        *)
            echo -e "$USAGE"
            exit 1
            ;;
    esac
done
EXT=(
    'cpp;hpp f34b7d c%2B%2B cplusplus'
    'c;h 555555 c c'
    'sh 89e051 sh powershell'
    'py 3572a5 py python'
    'tsx 3178c6 ts typescript'
    'js f1e05a js javascript'
    'css 563d7c css css3'
    'html e34c26 html html5'
)
TAIL="${#EXT[@]}"
if (( "$TAIL" % 2 )); then
    TAIL="$((TAIL + 1))"
fi
TAIL="$((TAIL/2 + 3))"

echo -e "[$YELLOW WARNING $NC] This will remove the last $TAIL lines from $OUTPUT"
read -p "Continue? [y/N] " -n 1 -r
echo
[[ ! $REPLY =~ ^[Yy]$ ]] &&  exit 1

for x in "${EXT[@]}"; do
    TOTAL=0
    x="$(cut -d ' ' -f 1 <<< "$x")"
    while read ext;do
        PAYLOAD="find $ROOT"

        while read line;do
            PAYLOAD+=" -not -path \"*/$line*\""
        done <<< "$(tr ' ' '\n' <<< "$EXCLUDE")"

        PAYLOAD+=" -name \"*.$ext\"\
            | xargs wc -c | tail -n 1 | cut -d' ' -f1"
        COUNT="$(eval "$PAYLOAD")"
        TOTAL="$((TOTAL + COUNT))"

    done <<< "$(tr ';' '\n' <<< "$x")"
    BYTES+=("$TOTAL")
done
TOTAL="$(IFS=+; echo "$((${BYTES[*]}))")"
PAYLOAD="|||\n|-|-|\n"
TMP=0
for x in "${!BYTES[@]}"; do
    if (( "${BYTES[x]}" )); then
        PERCENT="$(bc -l\
            <<< "scale=2; ${BYTES[x]} / $TOTAL * 100"\
            | cut -d. -f1)"
    else
        PERCENT=0
    fi
    COLOR="$(cut -d ' ' -f 2 <<< "${EXT[x]}")"
    LABEL="$(cut -d ' ' -f 3 <<< "${EXT[x]}")"
    LOGO="$(cut -d ' ' -f 4 <<< "${EXT[x]}")"
    COUNT="$(sed -r 's/([0-9]+)([0-9]{3})/\1.\2/g' <<< "${BYTES[x]}")"
    PAYLOAD+="| ![](https://img.shields.io/badge/--$PERCENT%25--%20$COUNT%20octets-%23$COLOR?style=for-the-badge&logo=$LOGO&logoColor=white&labelColor=424242&label=$LABEL) "
    ((TMP++))
    (( TMP % 2 == 0 )) &&  PAYLOAD+="|\n"
done

PAYLOAD="$(echo -e "$PAYLOAD")"
[[ "${PAYLOAD: -1}" != '|' ]] &&  PAYLOAD+="| |\n"
BUFFER="$(head -n -"$TAIL" "$OUTPUT")"
echo -ne "$BUFFER\n\n$PAYLOAD\n| | |" > "$OUTPUT"
